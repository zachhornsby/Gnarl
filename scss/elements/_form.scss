$control-font-size: $font-size !default;
$control-height: 2.85em !default;
$control-padding: 1em !default;
$control-border-radius: 0.1em !default;
$control-border-size: 0.1em !default;
$control-line-height: $control-height - $control-border-size * 2 !default;
$control-arrow-size: 0.5em !default;
$control-spacing: 0.75em !default;

$control: (
  types: (
    primary: $primary,
    success: $success,
    info: $info,
    warning: $warning,
    danger: $danger,
    white: $white,
    link: transparent
  ),
  sizes: (
    small: $font-size-small,
    large: $font-size-large,
    xlarge: $font-size-xlarge,
  )
);

@mixin control() {
  display: inline-block;
  padding-right: $control-padding;
  padding-left: $control-padding;
  height: $control-height;
  max-width: 100%;
  width: 100%;
  border: 0.1em solid $gray-light;
  border-radius: $control-border-radius;
  background-color: $white;
  color: $gray;
  font-size: $control-font-size;
  line-height: $control-height;
  transition: all 0.2s ease;

  &:hover {
    border-color: darken($gray-light, 4%);
    box-shadow: inset 0 0 0.15em $gray-light;
  }

  &:focus {
    outline: 0;
    box-shadow: inset 0 0 0.15em darken($gray-light, 6%);
  }
}

.input {
  @include control;

  @each $size, $multipler in get($control, sizes) {
    &.is-#{$size} {
      font-size: $multipler;
    }
  }

  @each $name, $hsl in get($control, types) {
    &.is-#{$name} {
      border-color: $hsl;

      &:hover {
        border-color: darken($hsl, 4%);
        box-shadow: inset 0 0 0.15em $hsl;
      }

      &:focus {
        box-shadow: 0 0 0.15em darken($hsl, 6%);
      }
    }
  }
}

.select {
  display: inline-block;
  max-width: 100%;
  position: relative;
  vertical-align: top;

  // arrow
  &:not(.has-multiple) {
    &:after {
      border: $control-border-size solid $gray-light;
      border-right: 0;
      border-top: 0;
      display: block;
      width: $control-arrow-size;
      height: $control-arrow-size;
      pointer-events: none;
      position: absolute;
      transform: rotate(-45deg);
      transform-origin: center;
      margin-top: -$control-arrow-size / 2 + -0.03em;
      top: 50%;
      right: $control-padding;
      z-index: 2;
      content: " ";
    }
  }

  @each $size, $multipler in get($control, sizes) {
    &.is-#{$size} select {
      font-size: $multipler;
    }
  }

  @each $name, $hsl in get($control, types) {
    &.is-#{$name} select {
      border-color: $hsl;

      &:hover {
        border-color: darken($hsl, 4%);
        box-shadow: inset 0 0 0.15em $hsl;
      }

      &:focus {
        box-shadow: 0 0 0.2em darken($hsl, 6%);
      }
    }
  }

  select {
    @include control;
    -webkit-appearance: none;
    -moz-appearance: none;
    padding-right: $control-padding * 2 + $control-arrow-size;

    &[multiple] {
      padding: 0;
      height: auto;

      option {
        padding: $control-padding / 2;
      }
    }
  }
}

.textarea {
  @include control;
  display: block;
  max-width: 100%;
  min-width: 100%;
  padding: $control-padding - 0.2em;
  line-height: 1.5em;
  resize: vertical;

  &:not([rows]) {
    max-height: 36em;
    min-height: 6.4em;
  }

  &[rows] {
    height: unset;
  }

  @each $size, $multipler in get($control, sizes) {
    &.is-#{$size} {
      font-size: $multipler;
    }
  }

  @each $name, $hsl in get($control, types) {
    &.is-#{$name} {
      border-color: $hsl;

      &:hover {
        border-color: darken($hsl, 4%);
        box-shadow: inset 0 0 0.15em $hsl;
      }

      &:focus {
        box-shadow: inset 0 0 0.2em darken($hsl, 6%);
      }
    }
  }
}

.checkbox, .radio {
  display: inline-block;
  position: relative;
  cursor: pointer;

  &[disabled], input[disabled] {
    cursor: not-allowed;
  }

  input {
    cursor: pointer;
    vertical-align: 0.1em;
  }
}